Procedimiento asignar_figura(E/S: rodillo[3][3]: Entero);
Inicio
  var ;
  Para (I = 1 Hasta I = 3) Hacer;
    Para (J = 1 Hasta J = 3) Hacer;
      En_Caso (rodillo[I][J] > 0) Sea;
        Caso (rodillo[I][J] = 1);
          Mostrar << 'üçå';
        Caso (rodillo[I][J] = 2);
          Mostrar << 'üçí';
        Caso (rodillo[I][J] = 3);
          Mostrar << 'ü•≠';
        Caso (rodillo[I][J] = 4);
          Mostrar << 'üçç';
        Otro_Caso
          Mostrar << 'üçã';
      Fin_Caso
    Fin_Para
  Fin_Para
Fin_Procedimiento

Funcion premio_maquinita(rodillo[3][3]: Entero, saldo_apostado: Entero): Entero;
Inicio
  var premio: Entero;
  
  En_Caso (rodillo[3][3] > 0) Sea;
    Caso (rodillo[1][1] = rodillo[1][2]) AND (rodillo[1][1] = rodillo[1][3]);
      premio = saldo_apostado * 5;
    Caso (rodillo[2][1] = rodillo[2][2]) AND (rodillo[2][1] = rodillo[2][3]);
      premio = saldo_apostado * 5;
    Caso (rodillo[3][1] = rodillo[3][2]) AND (rodillo[3][1] = rodillo[3][3]);
      premio = saldo_apostado * 5;
    Caso (rodillo[1][1] = rodillo[2][1]) AND (rodillo[1][1] = rodillo[3][1]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][2] = rodillo[2][2]) AND (rodillo[1][2] = rodillo[3][2]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][3] = rodillo[2][3]) AND (rodillo[1][3] = rodillo[3][3]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][1] = rodillo[2][2]) AND (rodillo[1][1] = rodillo[3][3]);
      premio = saldo_apostado * 15;
    Caso (rodillo[3][1] = rodillo[2][2]) AND (rodillo[3][1] = rodillo[1][3]);
      premio = saldo_apostado * 15;
    Otro_Caso
      premio = 0;
  Fin_Caso

  Devolver (premio);
Fin_Funcion

Procedimiento Tragamonedas(E: nombre: Cadena, E/S: saldo_disponible: Entero);
Inicio
  Var R, premio_giro, saldo_restante, saldo_apostado: Entero;
  Var rodillo[3][3]: entero;
  
  Mostrar << " -------------------------------------------------------";
  Mostrar << "|            BIENVENIDO A $FRUIT MONEY$                 |";
  Mostrar << "|                     REGLAS                            |";
  Mostrar << "|Si tres figuras son iguales entonces usted gana 5x     |";
  Mostrar << "|Si dos figuras son iguales entonces usted gana 2x      |";
  Mostrar << "|Si tres figuras son diferentes entonces usted pierde   |";
  Mostrar << "--------------------------------------------------------";
  
  Mostrar << "Querido usuario usted tiene", saldo_disponible, "fichas disponibles";
  
  Repetir
    Mostrar << " ----------------------------------------------------"            ;
    Mostrar << "|           ¬øCuanto saldo desea apostar?             |";
    Mostrar << "|    Montos de apuesta: min:1 ficha, max:50 fichas   |";
    Mostrar << " ----------------------------------------------------";
    Leer >> saldo_apostado;
    
    // validaci√≥n de saldo apostado
    Mientras (saldo_apostado < 1) OR (saldo_apostado > saldo_disponible) OR (saldo_apostado > 50) Hacer;
      Mostrar << "Error en monto apostado, vuelva a intentar";
      Leer >> saldo_apostado;
    Fin_Mientras
    
    Mostrar << "Comencemos";
    
    Para (I = 1 Hasta I = 3) Hacer;
      Para (J = 1 Hasta J = 3) Hacer;
        rodillos[I][J] = Aleatorio(1, 5);
      Fin_Para
    Fin_Para
    
    premio_giro = premio_maquinita(rodillo[3][3], saldo_apostado);
    
    Para (I = 1 Hasta I = 3) Hacer;
      Para (J = 1 Hasta J = 3) Hacer;
        Mostrar << "---------------------------"            ;
        Mostrar << "|TRAGAMONEDAS $FRUIT MONEY$|";
        Mostrar << "---------------------------"   ;
        Mostrar << "|", rodillo[I, J], "|";
      Fin_Para

      Mostrar << "---";
    Fin_Para
    
    Mostrar << "Resultados de la apuesta: usted gana", premio giro, "fichas";
    saldo_restante = (saldo_disponible - saldo_apostado) + premio_giro;
    
    Si (saldo_restante < 1) Entonces;
      Mostrar << "Su saldo es insuficiente para seguir jugando, ¬°recargue por favor!";
      Mostrar << "Hasta pronto, ¬°Gracias por jugar!";
      R = 2;

      Sino 
      Mostrar << "¬øDesea realizar otra apuesta?, 1:S√≠, 2: No";
      Leer >> R;
      
      Mientras (R < 1 OR R > 2) Hacer;
        Mostrar << "Error en respuesta enviada, solo puede seleccionar 1 o 2";
        Leer >> R;
      Fin_Mientras
    Fin_Si
    
    Hasta (R = 2);
  Fin_Repetir
  Mostrar << "Hasta pronto, ¬°Gracias por jugar!";
Fin_Procedimiento
