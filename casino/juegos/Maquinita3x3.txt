Procedimiento asignar_figura(rodillo[3][3]);
Inicio
  var ;
  Para (I = 1 Hasta 3) Hacer;
    Para (J = 1 Hasta 3) Hacer;
      En_Caso (rodillo[3][3] > 0) Sea;
        Caso (rodillo[I][J] = 1);
          Mostrar << 'üçå';
        Caso (rodillo[I][J] = 2);
          Mostrar << 'üçí';
        Caso (rodillo[I][J] = 3);
          Mostrar << 'ü•≠';
        Caso (rodillo[I][J] = 4);
          Mostrar << 'üçç';
        Otro_Caso
          Mostrar << 'üçã';
      Fin_Caso
    Fin_Para
  Fin_Para
Fin_Procedimiento

Funcion premio_maquinita(rodillo1, rodillo2, rodillo3: entero, saldo_apostado: Real): Real;
var premio: Real;
Inicio
  En_Caso (rodillo[3][3] > 0) Sea;
    Caso (rodillo[1][1] = rodillo[1][2]) AND (rodillo[1][1] = rodillo[1][3]);
      premio = monto_Apostado * 5;
    Caso (rodillo[2][1] = rodillo[2][2]) AND (rodillo[2][1] = rodillo[2][3]);
      premio = monto_Apostado * 5;
    Caso (rodillo[3][1] = rodillo[3][2]) AND (rodillo[3][1] = rodillo[3][3]);
      premio = monto_Apostado * 5;
    Caso (rodillo[1][1] = rodillo[2][1]) AND (rodillo[1][1] = rodillo[3][1]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][2] = rodillo[2][2]) AND (rodillo[1][2] = rodillo[3][2]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][3] = rodillo[2][3]) AND (rodillo[1][3] = rodillo[3][3]);
      premio = saldo_apostado * 10;
    Caso (rodillo[1][1] = rodillo[2][2]) AND (rodillo[1][1] = rodillo[3][3]);
      premio = saldo_apostado * 15;
    Caso (rodillo[3][1] = rodillo[2][2]) AND (rodillo[3][1] = rodillo[1][3]);
      premio = saldo_apostado * 15;
    Otro_Caso
      premio = 0;
  Fin_Caso
  
  Devolver (premio);
Fin_Funcion

Procedimiento figura(e/s: rodillo[3][3]);
Inicio
  En_Caso (rodillo1 > 0) AND (rodillo2 > 0) AND (rodillo3 > 0) AND (rodillo4 > 0) AND (rodillo5 > 0) AND (rodillo6 > 0) AND (rodillo7 > 0) AND (rodillo8 > 0) AND (rodillo9 > 09) Sea;
    Caso (rodillo[1][1] = 1) OR (rodillo[2][1] = 1) OR (rodillo[3][1] = 1) OR (rodillo[1][2] = 1) OR (rodillo[2][2] = 1) OR (rodillo[3][2] = 1) OR (rodillo[1][3] = 1) OR (rodillo[2][3] = 1) OR (rodillo[3][3] = 1);
      Mostrar << 'üçå';
    Caso (rodillo[1][1] = 2) OR (rodillo[2][1] = 2) OR (rodillo[3][1] = 2) OR (rodillo[1][2] = 2) OR (rodillo[2][2] = 2) OR (rodillo[3][2] = 2) OR (rodillo[1][3] = 2) OR (rodillo[2][3] = 2) OR (rodillo[3][3] = 2);
      Mostrar << 'üçí' ;
    Caso (rodillo[1][1] = 3) OR (rodillo[2][1] = 3) OR (rodillo[3][1] = 3) OR (rodillo[1][2] = 3) OR (rodillo[2][2] = 3) OR (rodillo[3][2] = 3) OR (rodillo[1][3] = 3) OR (rodillo[2][3] = 3) OR (rodillo[3][3] = 3);
      Mostrar << 'ü•≠' ;
    Caso (rodillo[1][1] = 4) OR (rodillo[2][1] = 4) OR (rodillo[3][1] = 4) OR (rodillo[1][2] = 4) OR (rodillo[2][2] = 4) OR (rodillo[3][2] = 4) OR (rodillo[1][3] = 4) OR (rodillo[2][3] = 4) OR (rodillo[3][3] = 4);
      Mostrar << 'üçç' ;
    Otro_Caso
      (rodillo[1][1] = 5) OR (rodillo[2][1] = 5) OR (rodillo[3][1] = 5) OR (rodillo[1][2] = 5) OR (rodillo[2][2] = 5) OR (rodillo[3][2] = 5) OR (rodillo[1][3] = 5) OR (rodillo[2][3] = 5) OR (rodillo[3][3] = 5);
      Mostrar << 'üçã' ;
  Fin_Caso
Fin_Procedimiento

Procedimiento tragamoneda;
Inicio
  Var rodillo1: Entero;
  Var rodillo2: Entero;
  Var rodillo3: Entero;
  Var saldo_usuario: Real;
  Var saldo_apostado: Real;
  Var saldo_restante: Real;
  Var r: entero;
  Var premio_giro: Real;
  rodillo[3][3]: entero;
  figuras[5] = ['üçå', 'üçí', 'ü•≠', 'üçç', 'üçã'];
  
  Mostrar << " -------------------------------------------------------";
  Mostrar << "|            BIENVENIDO A $FRUIT MONEY$                 |";
  Mostrar << "|                     REGLAS                            |";
  Mostrar << "|Si tres figuras son iguales entonces usted gana 5x     |";
  Mostrar << "|Si dos figuras son iguales entonces usted gana 2x      |";
  Mostrar << "|Si tres figuras son diferentes entonces usted pierde   |";
  Mostrar << "--------------------------------------------------------";
  saldo_usuario = menu_juegos(casino_nombres, casino_saldos_fichas, casino_stock_premios, casino_valor_premios, casino_premios, id_usuario);
  Mostrar << "Querido usuario usted tiene"saldo_usuario, "fichas disponibles";
  
  Repetir
    Mostrar << " ----------------------------------------------------"            ;
    Mostrar << "|           ¬øCuanto saldo desea apostar?             |";
    Mostrar << "|    Montos de apuesta: min:1 ficha, max:50 fichas   |";
    Mostrar << " ----------------------------------------------------";
    Leer >> saldo_apostado;
    
    //validaci√≥n de saldo apostado
    Mientras (saldo_apostado < 1 OR saldo_apostado > 50 Hacer) Hacer;
      Mostrar << "Error en monto apostado, vuelva a intentar";
      Leer >> saldo_apostado;
    Fin_Mientras
    
    //validaci√≥n de saldo apostado
    Mientras (saldo_apostado > saldo_usuario) Hacer;
      Mostrar << "No posee suficientes fondos para seguir jugando, recargue por favor";
      Leer >> saldo_usuario;
    Fin_Mientras
    
    Mostrar << "Comencemos";
    
    //asignar numeros
    rodillo[1][1] = aleatorio(1, 5);
    rodillo[2][1] = aleatorio(1, 5);
    rodillo[3][1] = aleatorio(1, 5);
    
    rodillo[1][2] = aleatorio(1, 5);
    rodillo[2][2] = aleatorio(1, 5);
    rodillo[3][2] = aleatorio(1, 5);
    
    rodillo[3][1] = aleatorio(1, 5);
    rodillo[3][2] = aleatorio(1, 5);
    rodillo[3][3] = aleatorio(1, 5);
    
    premio_giro = premio_maquinita(rodillo[3][3], saldo_apostado);
    
    Para (I = 1 Hasta I = 3) Hacer;
      Para (J = 1 Hasta J = 3) Hacer;
        Mostrar << "---------------------------";
        Mostrar << "|TRAGAMONEDAS $FRUIT MONEY$|";
        Mostrar << "---------------------------"   ;
        Mostrar << "|", rodillo[I][J], "|";
      Fin_Para
      Mostrar << "---";
    Fin_Para  ;
    
    Mostrar << "Resultados de la apuesta:usted gana", premio giro, "fichas";
    saldo_restante = (saldo_usuario-saldo_apostado) + premio_giro;
    
    Si (saldo_restante < 1) Entonces;
      Mostrar << "Su saldo es insuficiente para seguir jugando, ¬°recargue por favor!";
      Mostrar << "Hasta pronto, ¬°Gracias por jugar!";
      R = 2;
      Sino 
      Mostrar << "Desea realizar otra apuesta, 1:Si, 2:no";
      Leer >> R;
      
      Mientras (R < 1 OR R > 2 hacer) Hacer;
        Mostrar << "Error en respuesta enviada, solo puede seleccionar 1 o 2";
        Leer >> R;
      Fin_Mientras
    Fin_Si
    
    Hasta Que R = 2;
  Fin_Repetir
  Mostrar << "Hasta pronto, ¬°Gracias por jugar!";
Fin_Procedimiento
