Algoritmo Taquilla

Inicio
  // Simulacion de base de datos. Capacidad para 100 personas
  
  var id_casino: Entero;
  var nombre_casino: Cadena;
  var contrasena_casino: Cadena;
  var edad_casino: Entero;
  var saldo_fichas_casino: Entero;
  
  var contador_usuarios_casino, i: Entero;
  var ingresar_nuevo_usuario: Booleano;
  
  // Usuarios de simulacion para no tener una data totalmente vacia
  
  lista_nombres_casino[1] = "Ricardo el chambeador";
  lista_contrasenas_casino[1] = "contrasena";
  lista_edades_casino[1] = 22;
  lista_saldos_fichas[1] = 0;
  
  lista_nombres_casino[2] = "Reiyerd el papa de las apuestas";
  lista_contrasenas_casino[2] = "contrasena"; // Si, tenemos la misma contrasena
  lista_edades_casino[2] = 17;
  lista_saldos_fichas[2] = 0;
  
  Para (i = 3 Hasta i = 100) Hacer;
    lista_nombres_casino[i] = "sin_usuario";
    lista_contrasenas_casino[i] = "sin_contrasena";
    lista_edades_casino[i] = 0;
    lista_saldos_fichas[i] = 0;
  Fin_Para
  
  // Modulo para agregar usuarios
  
  registrar_nuevo_usuario(nombre_casino, contrasena_casino);
  
  // Modulo para iniciar sesion
Fin

Procedimiento registrar_nuevo_usuario(E/S: lista_nombres_casino, lista_contrasenas_casino, lista_edades_casino, S: id_casino);
Inicio
  var registrar_otro = 1: Booleano;
  var nombre_registro, contrasena_registro: Cadena;
  var edad_registro: Entero;
  
  Mientras (registrar_otro = 1) Hacer;
    Mostrar << "Ingrese su nombre";
    Leer >> nombre_registro;
    
    Mientras (nombre_registro = "sin_usuario") Hacer;
      Mostrar << "Ese nombre no es valido";
      Leer >> nombre_registro;
    Fin_Mientras
    
    Mostrar << "Ingrese su contrasena";
    Leer >> contrasena_registro;
    
    Mientras (contrasena_registro = "sin_contrasena") Hacer;
      Mostrar << "Contrasena invalida";
      Leer >> contrasena_registro;
    Fin_Mientras
    
    Mostrar << "Ingresa tu edad, perro";
    Leer >> edad_registro;
    
    Mientras (edad_registro < 18) Hacer;
      Mostrar << "No aceptamos perros menores de edad";
      Leer >> edad_registro;
    Fin_Mientras
    
  Fin_Mientras
Fin_Procedimiento

Funcion obtener_siguiente_id(lista_nombres_casino[100]: Cadena): Entero;
Inicio
  var ii = 1: Entero;
  var siguiente_id = -1: Entero;
  
  Mientras (ii <= 100 AND siguiente_id = -1) Hacer;
    Si(lista_nombres_casino[ii] = "sin_usuario")Entonces;
      siguiente_id = lista_nombres_casino[ii];
    Fin_Si
    
    ii = ii + 1;
  Fin_Mientras
  
  Devolver (siguiente_id);
Fin_Funcion

Procedimiento iniciar_sesion(E: nombre_casino, contrasena_casino, S: id_casino);
Inicio
  
Fin_Procedimiento

Funcion obtener_id(usuario: Cadena, contrasena: Cadena): Entero;
Inicio
  
  // Esta funcion debera recorrer el almacenamiento hasta encontrar el usuario que se solicita y
  // luego desencriptar la contrasena asociada a ese usuario. En caso de no existir el usuario o no
  // coincidir la contrasena devuelve - 1, una id que obviamente no existe
  
Fin_Funcion

Procedimiento doxxear_usuario();  // variables por definir
Inicio
  // Este procedimiento sirve para obtener todos los datos del usuario, representados de la siguiente manera: 
  
  // OBJETO USUARIO - > Representacion de los datos que manejaremos de un usuario
  //   id: Entero
  //   Nombre: Cadena
  //   Constrasena: Cadena
  //   Edad: Entero
  //   Telefono: Cadena
  //   Correo electronico: Cadena
  //   Direccion de habitacion: Cadena
  //   Persona grata: Booleano - > Util para los baneos
  //   Saldo en fichas: Entero
Fin_Procedimiento
