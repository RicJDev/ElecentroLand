Algoritmo Taquilla

Inicio
  var usuario, contrasena: Cadena;
  var saldo_fichas, id_usuario: Entero;
  
  // Aqui ira un almacenamiento de los usuarios y de toda su informacion
  
  // ...
  
  // Iniciamos la sesion
  iniciar_sesion(usuario, contrasena, id_usuario);
  Mostrar << iniciar_sesion;
Fin

Procedimiento iniciar_sesion(E/S: usuario, contrasena, S: id_usuario);
Inicio
  var opcion_registro = 0: Booleano;
  id_usuario =  - 1;
  
  Mientras (id_usuario =  - 1) Hacer;
    Mostrar << "Ingerese su usuario";
    Leer >> usuario;
    Mostrar << "Ingerese su contrasena";
    Leer >> contrasena;
    
    id_usuario = obtener_id(usuario, contrasena);
    
    Mostrar << "No se pudo iniciar la sesion. Quiere intentar otra vez o registrarse? (1: si, mano. Dale)";
    Leer >> opcion_registro;
    
    Si (opcion_registro = 1) Entonces;
      registrar_nuevo_usuario(usuario, contrasena, id_usuario);
      Mostrar << registrar_nuevo_usuario;
    Fin_Si
  Fin_Mientras

  // POR HACER:
  // Mostrar saldo en fichas usando doxxear_usuario para obtener sus datos
  // Validar que el pendejo no haya cometido una infraccion y haya sido baneado
Fin_Procedimiento

Procedimiento registrar_nuevo_usuario(E/S: usuario, contrasena, id_usuario);
Inicio
  // ir al almacenamiento
  // Verificar que no exista el usuario
  
  // Si no existe un usuario duplicado, permitir el registro
  // Registrar la id nueva en id_usuario
Fin_Procedimiento

Funcion obtener_id(usuario: Cadena, contrasena: Cadena): Entero;
Inicio
  var resultado: Entero;
  
  // Esta funcion debera recorrer el almacenamiento hasta encontrar el usuario que se solicita y
  // luego desencriptar la contrasena asociada a ese usuario. En caso de no existir el usuario o no
  // coincidir la contrasena devuelve - 1, una id que obviamente no existe
  
  resultado =  - 1;
  
  Devolver (resultado);
Fin_Funcion

Procedimiento doxxear_usuario(); // variables por definir
Inicio
  // Este procedimiento sirve para obtener todos los datos del usuario, representados de la siguiente manera:

  // OBJETO USUARIO -> Representacion de los datos que manejaremos de un usuario
  //   id: Entero
  //   Nombre: Cadena
  //   Constrasena: Cadena
  //   Edad: Entero
  //   Telefono: Cadena
  //   Correo electronico: Cadena
  //   Direccion de habitacion: Cadena
  //   Persona grata: Booleano -> Util para los baneos
  //   Saldo en fichas: Entero
Fin_Procedimiento
